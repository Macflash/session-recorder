{"version":3,"sources":["getusermedia.js","components/buttons/arrowButton.tsx","components/buttons/recordButton.tsx","components/buttons/stopButton.tsx","components/layout/buttonBar.tsx","components/layout/paddedBar.tsx","components/layout/screenWrapper.tsx","components/buttons/closeButton.tsx","components/layout/titleBar.tsx","components/screens/baseScreen.tsx","components/visualizer.tsx","components/clipInfo.tsx","components/trackList.tsx","components/recorder.tsx","components/screens/startScreen.tsx","components/screens/listenScreen.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["promisifiedOldGUM","constraints","successCallback","errorCallback","getUserMedia","navigator","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","Promise","call","reject","Error","polyfillGUM","undefined","mediaDevices","ArrowButton","_PureComponent","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this$props","props","onClick","title","direction","disabled","_this$props$size","size","height","width","color","unclickable","react_default","a","createElement","style","padding","backgroundColor","borderTop","borderBottom","borderLeft","borderRight","cursor","PureComponent","RecordButton","borderRadius","border","StopButton","ButtonBar","_Component","flex","display","flexDirection","textAlign","justifyContent","alignItems","children","Component","PaddedBar","objectSpread","ScreenWrapper","MsUserSelect","MozUserSelect","userSelect","position","top","bottom","left","right","CloseButton","className","TitleBar","_this","screen","icon","onStopAudio","paddingBottom","marginBottom","fontSize","renderIcon","margin","marginRight","href","marginLeft","onScreenChange","closeButton_CloseButton","recordButton_RecordButton","BaseScreen","screenWrapper_ScreenWrapper","titleBar_TitleBar","Visualizer","_getPrototypeOf2","_len","length","args","Array","_key","concat","clipCanvas","lastProgress","playProgress","canvasCtx","getContext","WIDTH","HEIGHT","fillStyle","fillRect","lineWidth","strokeStyle","sliceWidth","waveform","x","beginPath","moveTo","playLength","playing","i","y","lineTo","stroke","redrawCanvas","_this2","ref","c","onclick","e","onSeek","percent","offsetX","clientWidth","setState","ClipInfo","Visual","Audio","download","clipInfo","link","document","audioUrl","sessionName","trackName","body","appendChild","click","removeChild","onTimeUpdate","event","getCurrentTime","getTotalTime","duration","currentTime","time","showAudio","onDelete","onRename","onAudioPlayed","audioRef","trackNumber","maxWidth","textOverflow","overflow","minWidth","visualizer_Visualizer","frame","setCurrentTime","visual","audio","onplay","status","ontimeupdate","onPlay","controls","marginTop","src","TrackList","audioElements","exceptClip","forEach","pause","clips","onClipPlayed","map","clip","clipInfo_ClipInfo","_onRename","toString","_onDelete","stopAllClips","Recorder","mediaRecorder","analyser","dataBuffer","maxSilence","minSaveLength","lastClip","saveMode","lastNoiseCounter","chunks","trackCount","stream","saveClip","toConsumableArray","state","record","start","split","stop","stopAudio","then","initializeAudioStream","canvas","querySelector","draw","setTimeout","readAnalyserData","catch","err","alert","getTracks","track","audioContext","AudioContext","audioSource","createMediaStreamSource","createAnalyser","connect","bufferLength","fftSize","Uint8Array","MediaRecorder","mimeType","audioBitsPerSecond","onstart","ondataavailable","push","data","onstop","blob","Blob","type","window","URL","createObjectURL","console","log","getByteTimeDomainData","min","max","Math","slice","autoStartStop","_this3","stopButton_StopButton","_this4","_this$state","baseScreen_BaseScreen","trackList_TrackList","splice","JSON","parse","stringify","prompt","paddedBar_PaddedBar","buttonBar_ButtonBar","arrowButton_ArrowButton","renderMainButton","StartScreen","placeholder","onChange","onSessionNameChange","target","ListenScreen","App","setScreen","currentScreen","recorder_Recorder","listenScreen_ListenScreen","startScreen_StartScreen","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.01d52f6d.chunk.js","sourcesContent":["export var promisifiedOldGUM = function (constraints, successCallback, errorCallback) {\r\n    // First get ahold of getUserMedia, if present\r\n    var getUserMedia = (navigator.getUserMedia ||\r\n        navigator.webkitGetUserMedia ||\r\n        navigator.mozGetUserMedia ||\r\n        navigator.msGetUserMedia);\r\n\r\n    // Some browsers just don't implement it - return a rejected promise with an error\r\n    // to keep a consistent interface\r\n    if (!getUserMedia) {\r\n        return Promise.reject(new Error('getUserMedia is not implemented in this browser'));\r\n    }\r\n\r\n    // Otherwise, wrap the call to the old navigator.getUserMedia with a Promise\r\n    return new Promise(function (successCallback, errorCallback) {\r\n        getUserMedia.call(navigator, constraints, successCallback, errorCallback);\r\n    });\r\n\r\n}\r\n\r\nexport var polyfillGUM = function () {\r\n    // Older browsers might not implement mediaDevices at all, so we set an empty object first\r\n    if (navigator.mediaDevices === undefined) {\r\n        navigator.mediaDevices = {};\r\n    }\r\n\r\n    // Some browsers partially implement mediaDevices. We can't just assign an object\r\n    // with getUserMedia as it would overwrite existing properties.\r\n    // Here, we will just add the getUserMedia property if it's missing.\r\n    if (navigator.mediaDevices.getUserMedia === undefined) {\r\n        navigator.mediaDevices.getUserMedia = promisifiedOldGUM;\r\n    }\r\n}","import React, { Component, PureComponent } from 'react';\r\nimport { IButtonProps } from './buttonProps';\r\n\r\nexport interface IArrowButtonProps extends IButtonProps {\r\n    direction: \"left\" | \"right\";\r\n}\r\n\r\nexport class ArrowButton extends PureComponent<IArrowButtonProps> {\r\n    render() {\r\n        const { onClick, title, direction, disabled, size = \"75px\" } = this.props;\r\n        const height = \"calc(.5 * \" + size + \")\";\r\n        const width = \"calc(.8 *\" + size + \")\";\r\n        const color = disabled ? \"rgb(50,50,50)\" : \"rgb(125,125,125)\";\r\n        const unclickable = disabled || !onClick;\r\n        return <button\r\n            disabled={unclickable}\r\n            onClick={onClick}\r\n            title={title}\r\n            style={{\r\n                padding: 0,\r\n                height: 0,\r\n                width: 0,\r\n                backgroundColor: \"transparent\",\r\n                borderTop: height + \" solid transparent\",\r\n                borderBottom: height + \" solid transparent\",\r\n                borderLeft: direction == \"right\" ? width + \" solid \" + color : \"none\",\r\n                borderRight: direction == \"left\" ? width + \" solid \" + color : \"none\",\r\n                cursor: unclickable ? undefined : \"pointer\"\r\n            }}\r\n        />\r\n    }\r\n}","import React, { Component, PureComponent } from 'react';\r\nimport { IButtonProps } from './buttonProps';\r\n\r\nexport interface IRecordButtonProps extends IButtonProps {\r\n}\r\n\r\nexport class RecordButton extends PureComponent<IRecordButtonProps> {\r\n    render() {\r\n        const { onClick, title, disabled, size = \"75px\" } = this.props;\r\n        const color = disabled ? \"rgb(125,0,0)\" : \"rgb(225,0,0)\";\r\n        const unclickable = disabled || !onClick;\r\n        return <button\r\n            onClick={onClick}\r\n            title={title}\r\n            disabled={unclickable}\r\n            style={{\r\n                height: size,\r\n                width: size,\r\n                borderRadius: size,\r\n                backgroundColor: color,\r\n                border: \"none\",\r\n                cursor: unclickable ? \"unset\" : \"pointer\",\r\n            }}\r\n        />\r\n    }\r\n}","import React, { Component, PureComponent } from 'react';\r\nimport { IButtonProps } from './buttonProps';\r\n\r\nexport interface IStopButtonProps  extends IButtonProps{\r\n}\r\n\r\nexport class StopButton extends PureComponent<IStopButtonProps> {\r\n    render() {\r\n        const size = this.props.size || \"75px\";\r\n        return <button\r\n            onClick={this.props.onClick}\r\n            title={this.props.title}\r\n            style={{\r\n                height: size,\r\n                width: size,\r\n                backgroundColor: \"rgb(125,125,125)\",\r\n                border: \"none\",\r\n                cursor: \"pointer\"\r\n            }}\r\n        />\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport class ButtonBar extends Component<{ direction?: \"row\" | \"column\" }> {\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    flex: \"none\",\r\n                    display: \"flex\",\r\n                    flexDirection: (this.props.direction || \"row\"),\r\n                    textAlign: \"center\",\r\n                    justifyContent: \"space-around\",\r\n                    alignItems: \"center\",\r\n                    padding: \"5px\"\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport class PaddedBar extends Component<{style?: React.CSSProperties}> {\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{ \r\n                    padding: \"10% 15px\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    ...this.props.style\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport class ScreenWrapper extends Component {\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    MsUserSelect: \"none\",\r\n                    MozUserSelect: \"none\",\r\n                    userSelect: \"none\",\r\n                    position: \"absolute\",\r\n                    top: \"2.5%\",\r\n                    bottom: \"5%\",\r\n                    left: \"5%\",\r\n                    right: \"5%\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    justifyContent: \"flex-end\",\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component, PureComponent } from 'react';\r\nimport { IButtonProps } from './buttonProps';\r\n\r\nexport interface ICloseButtonProps  extends IButtonProps{\r\n}\r\n\r\nexport class CloseButton extends PureComponent<ICloseButtonProps> {\r\n    render() {\r\n        return <button\r\n            className=\"close\"\r\n            onClick={this.props.onClick}\r\n            title={this.props.title}\r\n            style={{\r\n                height: this.props.size,\r\n                width: this.props.size || \"75px\",\r\n                backgroundColor: \"transparent\",\r\n                border: \"none\",\r\n                cursor: \"pointer\"\r\n            }}\r\n        />\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { CurrentScreen } from '../screens/baseScreen';\r\nimport { RecordButton } from '../buttons/recordButton';\r\nimport { CloseButton } from '../buttons/closeButton';\r\n\r\nexport type Icon = \"recording\" | \"armed\";\r\n\r\nexport interface ITitleBarProps {\r\n    icon?: Icon,\r\n    title?: string,\r\n    screen: CurrentScreen,\r\n    onScreenChange: (newScreen: CurrentScreen) => void,\r\n    onStopAudio?: () => void;\r\n};\r\n\r\nexport class TitleBar extends Component<ITitleBarProps> {\r\n    public static renderIcon(icon?: Icon): React.ReactNode {\r\n        const size = \"20px\";\r\n        switch (icon) {\r\n            case \"recording\":\r\n                return <RecordButton size={size} />\r\n            default:\r\n                return <RecordButton size={size} disabled={true} />\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { title, screen, icon, onStopAudio } = this.props;\r\n        return (\r\n            <div\r\n                style={{\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                    paddingBottom: \"5%\",\r\n                    marginBottom: \"auto\",\r\n                    display: \"flex\",\r\n                    fontSize: \"125%\",\r\n                }}>\r\n                {TitleBar.renderIcon(icon)}\r\n                {screen == \"start\"\r\n                    ? <a style={{ margin: \"0 10px\", marginRight: \"auto\" }} href=\"https://github.com/macflash/session-recorder\">{title}</a>\r\n                    : <span style={{ margin: \"0 10px\", marginRight: \"auto\" }}>{title}</span>\r\n                }\r\n                {screen == \"listen\" &&\r\n                    <button\r\n                        style={{ marginLeft: \"auto\" }}\r\n                        onClick={() => { this.props.onScreenChange(\"record\") }}\r\n                    >\r\n                        Record\r\n                </button>}\r\n                {onStopAudio && <CloseButton size=\"25px\" title=\"Stop audio\" onClick={onStopAudio} />}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { RecordButton } from '../buttons/recordButton';\r\nimport { ButtonBar } from '../layout/buttonBar';\r\nimport { ScreenWrapper } from '../layout/screenWrapper';\r\nimport { TitleBar, ITitleBarProps } from '../layout/titleBar';\r\nimport { PaddedBar } from '../layout/paddedBar';\r\n\r\nexport type CurrentScreen = \"start\" | \"record\" | \"listen\";\r\n\r\nexport interface IScreenProps extends ITitleBarProps {\r\n}\r\n\r\nexport class BaseScreen extends Component<IScreenProps> {\r\n    render() {\r\n        return (\r\n            <ScreenWrapper>\r\n                <TitleBar {...this.props} />\r\n                {this.props.children}\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport interface IVisualizerProps {\r\n    waveform: number[];\r\n    style?: React.CSSProperties;\r\n    onSeek?: (percent: number) => void;\r\n}\r\n\r\nexport interface IVisualizerState {\r\n    clipCanvas?: HTMLCanvasElement;\r\n}\r\n\r\nexport class Visualizer extends Component<IVisualizerProps, IVisualizerState> {\r\n    clipCanvas: HTMLCanvasElement | null = null;\r\n    private lastProgress: number = 0;\r\n\r\n    public redrawCanvas(playProgress: number) {\r\n        this.lastProgress = playProgress;\r\n        if (!this.clipCanvas) { return; }\r\n        const canvasCtx = this.clipCanvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n\r\n        const WIDTH = this.clipCanvas.width\r\n        const HEIGHT = this.clipCanvas.height;\r\n\r\n        canvasCtx.fillStyle = 'rgb(25, 25, 25)';\r\n        canvasCtx.fillRect(0, 0, WIDTH, HEIGHT);\r\n\r\n        canvasCtx.lineWidth = 2;\r\n        canvasCtx.strokeStyle = 'rgb(225, 225, 225)';\r\n\r\n        const sliceWidth = WIDTH * 1.0 / this.props.waveform.length;\r\n        let x = 0;\r\n        canvasCtx.beginPath();\r\n        canvasCtx.moveTo(0, HEIGHT / 2);\r\n\r\n        const playLength = playProgress * this.props.waveform.length;\r\n        let playing = true;\r\n        for (var i = 0; i < this.props.waveform.length; i++) {\r\n            const v = this.props.waveform[i] / 128.0;\r\n            const y = v * HEIGHT / 2;\r\n            canvasCtx.lineTo(x, y);\r\n\r\n            if (i >= playLength && playing) {\r\n                canvasCtx.stroke();\r\n                canvasCtx.beginPath();\r\n                canvasCtx.moveTo(x, y);\r\n                canvasCtx.strokeStyle = 'rgb(125, 125, 125)';\r\n                playing = false;\r\n            }\r\n\r\n            x += sliceWidth;\r\n        }\r\n\r\n        canvasCtx.stroke();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.redrawCanvas(this.lastProgress);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <canvas\r\n                height=\"100\"\r\n                width=\"1000\"\r\n                style={{\r\n                    flex: \"auto\",\r\n                    ...this.props.style\r\n                }}\r\n                ref={c => {\r\n                    if (!this.clipCanvas && c) {\r\n                        this.clipCanvas = c;\r\n                        this.clipCanvas.onclick = e => {\r\n                            if (this.props.onSeek) {\r\n                                let percent = e.offsetX / c.clientWidth;\r\n                                this.props.onSeek(percent);\r\n                            }\r\n                        }\r\n                        this.setState({ clipCanvas: c });\r\n                    }\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Visualizer } from './visualizer';\r\nimport { CloseButton } from './buttons/closeButton';\r\nimport { ArrowButton } from './buttons/arrowButton';\r\nimport { StopButton } from './buttons/stopButton';\r\n\r\nexport interface IClipInfo {\r\n    sessionName: string;\r\n    audioUrl: string;\r\n    trackName: string;\r\n\r\n    //todo: add other information like length, date and wave preview\r\n    waveform: number[];\r\n    trackNumber: number;\r\n}\r\n\r\nexport interface IClipInfoProps {\r\n    clipInfo: IClipInfo;\r\n    onRename: () => void;\r\n    onDelete: () => void;\r\n    showAudio?: boolean;\r\n    onAudioPlayed?: () => void;\r\n    audioRef?: (audio: HTMLAudioElement) => void;\r\n}\r\n\r\nexport class ClipInfo extends Component<IClipInfoProps> {\r\n    public Visual: Visualizer | null = null;\r\n    public Audio: HTMLAudioElement | null = null;\r\n    private clipCanvas: HTMLCanvasElement | null = null;\r\n\r\n    private download = () => {\r\n        const { clipInfo } = this.props;\r\n        var link = document.createElement(\"a\"); // Or maybe get it from the current document\r\n        link.href = clipInfo.audioUrl;\r\n        link.download = (clipInfo.sessionName ? clipInfo.sessionName + \"_\" : \"\") + clipInfo.trackName + \".webm\";\r\n        document.body.appendChild(link);\r\n        this.download && link.click();\r\n        document.body.removeChild(link);\r\n    }\r\n\r\n    getTotalTime(): number {\r\n        return this.Audio!.duration;\r\n    }\r\n\r\n    getCurrentTime(): number {\r\n        return this.Audio!.currentTime;\r\n    }\r\n\r\n    setCurrentTime(time: number) {\r\n        this.Audio!.currentTime = time;\r\n    }\r\n\r\n    onTimeUpdate = (event: Event) => {\r\n        if (!this.Audio || !this.Visual) {\r\n            return;\r\n        }\r\n\r\n        this.Visual.redrawCanvas(this.getCurrentTime() / this.getTotalTime());\r\n    }\r\n\r\n    render() {\r\n        const { clipInfo, showAudio, onDelete, onRename, onAudioPlayed, audioRef } = this.props;\r\n        return (\r\n            <div style={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                height: \"100px\",\r\n                margin: \"5px 0\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\"\r\n            }}>\r\n                <div style={{ flex: \"none\", display: \"flex\", alignItems: \"center\", marginRight: \"5px\" }}>\r\n                    {clipInfo.trackNumber}\r\n                </div>\r\n                <div style={{\r\n                    maxWidth: \"33%\",\r\n                    margin: \"0 5px\",\r\n                    justifyContent: \"space-around\",\r\n                    flex: \"none\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    height: \"100%\"\r\n                }}>\r\n                    <div style={{ flex: \"none\", textOverflow: \"ellipsis\", overflow: \"hidden\" }}>\r\n                        {clipInfo.trackName}\r\n                    </div>\r\n                    <button onClick={onRename}>Rename</button>\r\n                    <button onClick={this.download}>Download</button>\r\n                </div>\r\n                <div style={{\r\n                    flex: \"auto\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    maxWidth: \"80%\",\r\n                    minWidth: \"50%\",\r\n                    margin: \"0 5px\"\r\n                }}>\r\n                    <Visualizer\r\n                        onSeek={percent => {\r\n                            const frame = percent * this.getTotalTime();\r\n                            this.setCurrentTime(frame);\r\n                        }}\r\n                        ref={visual => { this.Visual = this.Visual || visual; }}\r\n                        waveform={clipInfo.waveform}\r\n                        style={{ height: \"50px\" }}\r\n                    />\r\n                    <audio\r\n                        ref={audio => {\r\n                            if (audio) {\r\n                                audio.onplay = () => { this.setState({ status: \"playing\" }) };\r\n                                audio.ontimeupdate = this.onTimeUpdate;\r\n                            }\r\n                            if (audio && audioRef) { audioRef(audio); }\r\n                            this.Audio = this.Audio || audio;\r\n                        }}\r\n                        onPlay={onAudioPlayed}\r\n                        controls={showAudio}\r\n                        style={{\r\n                            width: \"100%\",\r\n                            height: \"40px\",\r\n                            marginTop: \"10px\"\r\n                        }}\r\n                        src={clipInfo.audioUrl}\r\n                    />\r\n                </div>\r\n\r\n                <CloseButton size=\"50px\" title=\"Delete\" onClick={onDelete} />\r\n\r\n                {/*\r\n                    Just use the controls they work great\r\n                    <ArrowButton direction=\"right\" onClick={()=>{this.Audio!.play();}} />\r\n                    <StopButton onClick={()=>{this.Audio!.pause();}} />\r\n                */}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { IClipInfo, ClipInfo } from './clipInfo';\r\n\r\nexport interface ITrackListProps {\r\n    clips: IClipInfo[];\r\n    onClipPlayed?: () => void;\r\n    onDelete: (index: number) => void;\r\n    onRename: (index: number) => void;\r\n}\r\n\r\nexport class TrackList extends Component<ITrackListProps> {\r\n    private audioElements: HTMLAudioElement[] = [];\r\n    public stopAllClips(exceptClip?: number) {\r\n        this.audioElements.forEach((a, i) => {\r\n            if (exceptClip != i) {\r\n                a.pause();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { clips, onClipPlayed, onDelete, onRename } = this.props;\r\n        return (\r\n            <div style={{ overflow: \"auto\", flex: \"auto\", padding: \"5px\" }}>\r\n                {clips.map((clip, i) => {\r\n                    return <ClipInfo\r\n                        showAudio\r\n                        audioRef={a => { if (a) { this.audioElements[i] = a; } }}\r\n                        key={i}\r\n                        clipInfo={clip}\r\n                        onRename={() => { onRename(i); }}\r\n                        onDelete={() => { onDelete(i); }}\r\n                        onAudioPlayed={() => {\r\n                            // stop other audio clips\r\n                            this.stopAllClips(i);\r\n\r\n                            // stop recording (handled in parent)\r\n                            onClipPlayed && onClipPlayed();\r\n                        }}\r\n                    />\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}","import { polyfillGUM } from \"../getusermedia\";\r\nimport React, { Component } from 'react';\r\nimport { ClipInfo, IClipInfo } from \"./clipInfo\";\r\nimport { TitleBar } from \"./layout/titleBar\";\r\nimport { ScreenWrapper } from \"./layout/screenWrapper\";\r\nimport { ArrowButton } from \"./buttons/arrowButton\";\r\nimport { RecordButton } from \"./buttons/recordButton\";\r\nimport { StopButton } from \"./buttons/stopButton\";\r\nimport { ButtonBar } from \"./layout/buttonBar\";\r\nimport { PaddedBar } from \"./layout/paddedBar\";\r\nimport { IScreenProps, BaseScreen } from \"./screens/baseScreen\";\r\nimport { TrackList } from \"./trackList\";\r\n\r\nexport interface IRecorderProps extends IScreenProps {\r\n}\r\n\r\nexport interface IRecorderState {\r\n    stream?: MediaStream;\r\n    lastClip?: IClipInfo;\r\n    clips: IClipInfo[];\r\n    status: \"initializing\" | \"ready\" | \"armed\" | \"recording\" | \"done\" | \"paused\" | \"error\"; // it looks like mediarecorder is reusable after stopping.\r\n    recording?: \"waiting for audio\" | \"detected sound recently\" | \"recording a track\";\r\n}\r\n\r\nexport class Recorder extends Component<IRecorderProps, IRecorderState> {\r\n    private mediaRecorder?: MediaRecorder;\r\n    private analyser?: AnalyserNode;\r\n    private dataBuffer?: Uint8Array;\r\n\r\n    private readonly maxSilence = 100;\r\n    private readonly minSaveLength = 1000;\r\n    private lastClip?: IClipInfo;\r\n    private saveMode: \"saveNext\" | \"autodecide\" | \"skipNext\" = \"autodecide\";\r\n    private lastNoiseCounter = 0;\r\n\r\n    // currently recording chunks\r\n    private chunks: Blob[] = [];\r\n\r\n    // currently recording chunks\r\n    private waveform: number[] = [];\r\n\r\n    private trackCount = 1;\r\n\r\n    stream?: MediaStream;\r\n\r\n    constructor(props: IRecorderProps) {\r\n        super(props);\r\n        polyfillGUM();\r\n        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n            navigator.mediaDevices.getUserMedia({ audio: true })\r\n                .then(stream => {\r\n                    this.initializeAudioStream(stream);\r\n\r\n                    const canvas = document.querySelector('.visualizer') as HTMLCanvasElement;\r\n                    const canvasCtx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n                    canvasCtx.fillStyle = 'rgb(25, 25, 25)';\r\n                    canvasCtx.lineWidth = 2;\r\n\r\n                    // TODO: move this to a method\r\n                    const draw = () => {\r\n                        setTimeout(draw, 1000 / 60);\r\n                        //requestAnimationFrame(draw);\r\n\r\n                        // how do we update this data while not recording?\r\n                        // but also not do duplicates here?\r\n                        this.readAnalyserData();\r\n\r\n                        const WIDTH = canvas.width\r\n                        const HEIGHT = canvas.height;\r\n                        canvasCtx.fillRect(0, 0, WIDTH, HEIGHT);\r\n                        if (this.state.status == \"recording\") {\r\n                            canvasCtx.strokeStyle = 'rgb(225, 0, 0)';\r\n                        }\r\n                        else {\r\n                            canvasCtx.strokeStyle = 'rgb(75, 75, 75)';\r\n                        }\r\n\r\n                        const sliceWidth = WIDTH * 1.0 / this.waveform.length;\r\n                        let x = 0;\r\n\r\n                        canvasCtx.beginPath();\r\n                        canvasCtx.moveTo(0, HEIGHT / 2);\r\n                        for (let i = 0; i < this.waveform.length; i++) {\r\n                            const v = this.waveform[i] / 128.0;\r\n                            const y = v * HEIGHT / 2;\r\n                            canvasCtx.lineTo(x, y);\r\n                            x += sliceWidth;\r\n                        }\r\n\r\n                        canvasCtx.lineTo(canvas.width, canvas.height / 2);\r\n                        canvasCtx.stroke();\r\n                    }\r\n\r\n                    draw();\r\n\r\n                    // actually lets go straight to armed. default is to go to \"ready\"\r\n                    this.setState({ status: \"armed\" });\r\n\r\n                }).catch(err => {\r\n                    alert('The following getUserMedia error occured: ' + err);\r\n                    this.setState({ status: \"error\" });\r\n                });\r\n        }\r\n        else {\r\n            alert('getUserMedia not supported on your browser!');\r\n            this.setState({ status: \"error\" });\r\n        }\r\n\r\n        this.state = { status: \"initializing\", clips: [] };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.stream) { this.stream.getTracks().forEach(track => track.stop()) }\r\n    }\r\n\r\n    private initializeAudioStream(stream: MediaStream) {\r\n        this.stream = stream;\r\n        this.setState({ stream });\r\n\r\n        // Set up AnalyserNode for waveform rendering\r\n        var audioContext = new AudioContext();\r\n        var audioSource = audioContext.createMediaStreamSource(stream);\r\n        this.analyser = audioContext.createAnalyser();\r\n        audioSource.connect(this.analyser);\r\n        var bufferLength = this.analyser.fftSize;\r\n        this.dataBuffer = new Uint8Array(bufferLength);\r\n\r\n        // Set up MediaRecorder for recording (obviously)\r\n        this.mediaRecorder = new MediaRecorder(stream, { mimeType: \"audio/webm\", audioBitsPerSecond: 320000 });\r\n        this.mediaRecorder.onstart = e => {\r\n            // reset our waveform and chunks\r\n            this.chunks = [];\r\n            this.waveform = [];\r\n        }\r\n        this.mediaRecorder.ondataavailable = (e) => {\r\n            this.chunks.push(e.data);\r\n\r\n            // here is where we should save the waveform as well\r\n            this.readAnalyserData();\r\n        }\r\n        this.mediaRecorder.onstop = (e) => {\r\n            // probably should reset the waveform..?\r\n            const blob = new Blob(this.chunks, { 'type': 'audio/webm' });\r\n            const audioUrl = window.URL.createObjectURL(blob);\r\n            const clipInfo: IClipInfo = {\r\n                audioUrl,\r\n                waveform: this.waveform,\r\n                sessionName: this.props.title,\r\n            } as IClipInfo;\r\n\r\n            this.chunks = [];\r\n            this.waveform = [];\r\n\r\n            // this is where we should decide if we keep it or not...\r\n            // if it is really short DONT keep it.\r\n            this.lastClip = clipInfo;\r\n            this.setState({ lastClip: clipInfo });\r\n            if (this.saveMode == \"autodecide\") {\r\n                if (clipInfo.waveform.length < this.minSaveLength) {\r\n                    console.log(\"skip saving the track since it is so short\");\r\n                    return;\r\n                }\r\n\r\n                // TODO: also check to see how \"full\" the clip is. \r\n                // If it is like 2 snare hits a long way apart don't keep it.\r\n            }\r\n            if (this.saveMode == \"skipNext\") {\r\n                // only skip one\r\n                this.saveMode = \"autodecide\";\r\n                console.log(\"skip saving because we are in skipNext save mode\");\r\n                return;\r\n            }\r\n            if (this.saveMode == \"saveNext\") {\r\n                // only save one\r\n                this.saveMode = \"autodecide\";\r\n                console.log(\"force saving because we are in saveNext save mode\");\r\n            }\r\n\r\n            this.saveClip(clipInfo);\r\n        }\r\n    }\r\n\r\n    private readAnalyserData() {\r\n        if (!this.analyser || !this.dataBuffer) { throw \"missing analyser node or data buffer!\"; }\r\n        this.analyser.getByteTimeDomainData(this.dataBuffer);\r\n        var min = 100000000000000;\r\n        var max = -100000000000000;\r\n        this.dataBuffer.forEach(value => { min = Math.min(value, min); max = Math.max(value, max); });\r\n        this.waveform = this.waveform.concat([min, max]);\r\n\r\n        // This is really just so the waveform \"scrolls\" when in the armed state.\r\n        if (this.state.status != \"recording\") {\r\n            // there are some... race conditions here depending on when the recording gets stopped.\r\n            // should either fix this or ensure we don't trim VALID recordings\r\n            // it should never be able to get out of this region, but bad things would happen if it did?\r\n            if (this.waveform.length > this.maxSilence\r\n                && this.waveform.length < this.maxSilence + 10) {\r\n                // wowza this is horrible. just making the race condition smaller...\r\n                this.waveform = this.waveform.slice(this.waveform.length - this.maxSilence);\r\n            }\r\n        }\r\n\r\n        // Decide whether to start or stop recording\r\n        this.autoStartStop(min, max);\r\n    }\r\n\r\n    private autoStartStop(min: number, max: number) {\r\n        if (max > 140 || min < 100) {\r\n            this.lastNoiseCounter = 0;\r\n            // if we aren't recording we should start\r\n            if (this.state.status == \"armed\") {\r\n                this.record();\r\n            }\r\n        }\r\n        else {\r\n            this.lastNoiseCounter++;\r\n            if (this.lastNoiseCounter > this.maxSilence) {\r\n                // if we are recording we should stop but stay armed\r\n                if (this.state.status == \"recording\") {\r\n                    this.split();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private saveClip = (clipInfo: IClipInfo) => {\r\n        clipInfo.trackName = \"Track \" + this.trackCount;\r\n        clipInfo.trackNumber = this.trackCount;\r\n        this.trackCount++;\r\n        this.setState({ clips: [...this.state.clips, clipInfo], lastClip: undefined });\r\n        this.lastClip = undefined;\r\n        this.waveform = [];\r\n    }\r\n\r\n    public record = () => {\r\n        if (!this.mediaRecorder) {\r\n            throw \"No recorder!\";\r\n        }\r\n\r\n        this.mediaRecorder.start();\r\n        this.setState({ status: \"recording\" });\r\n    }\r\n\r\n    /*\r\n    public pause = () => {\r\n        if (!this.mediaRecorder) {\r\n            throw \"No recorder!\";\r\n        }\r\n\r\n        this.mediaRecorder.pause();\r\n        this.setState({ status: \"paused\" });\r\n    }\r\n\r\n    public resume = () => {\r\n        if (!this.mediaRecorder) {\r\n            throw \"No recorder!\";\r\n        }\r\n\r\n        this.mediaRecorder.resume();\r\n        this.setState({ status: \"recording\" });\r\n    }\r\n    */\r\n\r\n    public split = () => {\r\n        if (!this.mediaRecorder) {\r\n            throw \"No recorder!\";\r\n        }\r\n\r\n        this.mediaRecorder.stop();\r\n        this.setState({ status: \"armed\" }); // not sure this is right!\r\n    }\r\n\r\n    public stop = () => {\r\n        if (!this.mediaRecorder) {\r\n            throw \"No recorder!\";\r\n        }\r\n\r\n        if (this.mediaRecorder.state == \"recording\" || this.mediaRecorder.state == \"paused\") {\r\n            this.mediaRecorder.stop();\r\n        }\r\n\r\n        this.setState({ status: \"ready\" });\r\n    }\r\n\r\n    private renderMainButton(): React.ReactNode {\r\n        const { status } = this.state;\r\n        switch (status) {\r\n            case \"ready\":\r\n                return <RecordButton\r\n                    onClick={() => { this.setState({ status: \"armed\" }); }}\r\n                    title=\"Arm for recording\"\r\n                />;\r\n            case \"armed\":\r\n            case \"recording\":\r\n                return <StopButton\r\n                    onClick={this.stop}\r\n                    title=\"Stop\"\r\n                />;\r\n            default:\r\n                return <div style={{ height: \"75px\", color: \"rgb(50,50,50)\", display: \"flex\", alignItems: \"center\", textAlign: \"center\" }}>{status}</div>;\r\n        }\r\n    }\r\n\r\n    stopAudio = () => {\r\n        this.props.onScreenChange(\"start\");\r\n    }\r\n\r\n    render() {\r\n        const { status, clips, lastClip, stream } = this.state;\r\n        const onStopAudio = stream ? this.stopAudio : undefined;\r\n        return (\r\n            <BaseScreen\r\n                screen=\"record\"\r\n                icon={status as any}\r\n                title={\"Recording \" + (this.props.title || \"\")}\r\n                onScreenChange={this.props.onScreenChange}\r\n                onStopAudio={onStopAudio}\r\n            >\r\n                <TrackList\r\n                    clips={clips}\r\n                    onClipPlayed={this.stop}\r\n                    onDelete={i => {\r\n                        var removed = clips.splice(i, 1);\r\n                        this.setState({ clips: clips.slice() })\r\n                    }}\r\n                    onRename={i => {\r\n                        var clip = JSON.parse(JSON.stringify(clips[i])) as IClipInfo;\r\n                        clip.trackName = prompt(\"Rename '\" + clip.trackName + \"'\") || clip.trackName;\r\n                        clips[i] = clip;\r\n                        this.setState({ clips: clips.slice() })\r\n                    }}\r\n                />\r\n                <PaddedBar>\r\n                    <canvas className=\"visualizer\" height=\"100\" width=\"1000\" style={{ width: \"100%\", height: \"100px\" }} />\r\n                </PaddedBar>\r\n                <ButtonBar>\r\n\r\n                    <ArrowButton\r\n                        size=\"50px\"\r\n                        direction=\"left\"\r\n                        title=\"Save\"\r\n                        disabled={status != \"recording\" && !lastClip}\r\n                        onClick={() => {\r\n                            if (status == \"recording\") { this.saveMode = \"saveNext\"; this.split() }\r\n                            else if (lastClip) { this.saveClip(lastClip); }\r\n                        }}\r\n                    />\r\n\r\n                    {this.renderMainButton()}\r\n\r\n                    <ArrowButton\r\n                        size=\"50px\"\r\n                        direction=\"right\"\r\n                        title=\"Skip\"\r\n                        disabled={status != \"recording\" && !lastClip}\r\n                        onClick={() => {\r\n                            if (status == \"recording\") { this.saveMode = \"skipNext\"; this.split() }\r\n                            else if (lastClip) { this.setState({ lastClip: undefined }); }\r\n                        }}\r\n                    />\r\n\r\n                </ButtonBar>\r\n            </BaseScreen>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { RecordButton } from '../buttons/recordButton';\r\nimport { ButtonBar } from '../layout/buttonBar';\r\nimport { ScreenWrapper } from '../layout/screenWrapper';\r\nimport { TitleBar } from '../layout/titleBar';\r\nimport { PaddedBar } from '../layout/paddedBar';\r\nimport { BaseScreen, IScreenProps } from './baseScreen';\r\n\r\nexport interface IStartScreenProps extends IScreenProps {\r\n    onSessionNameChange: (name: string) => void;\r\n}\r\n\r\nexport class StartScreen extends Component<IStartScreenProps> {\r\n    render() {\r\n        return (\r\n            <BaseScreen title=\"Session Recorder\" screen={this.props.screen} onScreenChange={this.props.onScreenChange}>\r\n                <PaddedBar style={{ height: \"100px\" }}>\r\n                    <input\r\n                        placeholder=\"Enter a name your session...\"\r\n                        onChange={e => {\r\n                            this.props.onSessionNameChange(e.target.value);\r\n                        }}\r\n                        type=\"textfield\"\r\n                        style={{\r\n                            maxWidth: \"calc(100% - 20px)\",\r\n                            height: \"50px\",\r\n                            flex: \"auto\",\r\n                            fontSize: \"150%\",\r\n                            padding: \"0 10px\",\r\n                            textAlign: \"center\"\r\n                        }}\r\n                    />\r\n                </PaddedBar>\r\n                <ButtonBar>\r\n                    <RecordButton\r\n                        onClick={() => { this.props.onScreenChange(\"record\") }}\r\n                        title=\"Start a new session\"\r\n                    />\r\n                </ButtonBar>\r\n            </BaseScreen>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { ScreenWrapper } from '../layout/screenWrapper';\r\nimport { TitleBar } from '../layout/titleBar';\r\nimport { IScreenProps, BaseScreen } from './baseScreen';\r\nimport { PaddedBar } from '../layout/paddedBar';\r\n\r\nexport interface IListScreenProps extends IScreenProps {\r\n}\r\n\r\nexport class ListenScreen extends Component<IListScreenProps> {\r\n    render() {\r\n        return (\r\n            <BaseScreen title={this.props.title} screen={this.props.screen} onScreenChange={this.props.onScreenChange}>\r\n                <PaddedBar>Ooo, show all sessions and an option to create a new session</PaddedBar>\r\n            </BaseScreen>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Recorder } from './components/recorder';\nimport { StartScreen } from './components/screens/startScreen';\nimport { ListenScreen } from './components/screens/listenScreen';\nimport { CurrentScreen } from './components/screens/baseScreen';\n\n// App has 3 states. Start, Record and Listen\nexport type Screen = \"start\" | \"record\" | \"listen\";\n\ninterface IAppProps {\n}\n\ninterface IAppState {\n  currentScreen: Screen;\n  sessionName?: string;\n}\n\nclass App extends Component<IAppProps, IAppState> {\n  constructor(props: IAppProps) {\n    super(props);\n    this.state = { currentScreen: \"start\" };\n  }\n\n  private setScreen = (currentScreen: CurrentScreen) => {\n    this.setState({ currentScreen });\n  }\n\n  render() {\n    const { currentScreen } = this.state;\n    switch (currentScreen) {\n      case \"record\":\n        // current functionality is in <Recorder>\n        return <Recorder\n          screen={this.state.currentScreen}\n          onScreenChange={this.setScreen}\n          title={this.state.sessionName}\n        />;\n      case \"listen\":\n        return <ListenScreen\n          title={this.state.sessionName}\n          screen={this.state.currentScreen}\n          onScreenChange={this.setScreen}\n        />\n      case \"start\":\n      default:\n        return <StartScreen\n          title={this.state.sessionName}\n          screen={this.state.currentScreen}\n          onScreenChange={this.setScreen}\n          onSessionNameChange={sessionName => { this.setState({ sessionName }) }}\n        />\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}