{"version":3,"sources":["getusermedia.js","visualizer.tsx","clipInfo.tsx","components/layout/titleBar.tsx","components/layout/screenWrapper.tsx","components/buttons/recordButton.tsx","components/buttons/stopButton.tsx","components/layout/buttonBar.tsx","components/layout/paddedBar.tsx","recorder.tsx","components/screens/startScreen.tsx","components/screens/listenScreen.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["promisifiedOldGUM","constraints","successCallback","errorCallback","getUserMedia","navigator","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","Promise","call","reject","Error","polyfillGUM","undefined","mediaDevices","Visualizer","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","apply","concat","clipCanvas","inherits","createClass","key","value","canvasCtx","getContext","WIDTH","width","HEIGHT","height","fillStyle","fillRect","lineWidth","strokeStyle","sliceWidth","props","waveform","x","lastX","lastY","beginPath","moveTo","i","y","lineTo","stroke","_this2","react_default","a","createElement","ref","c","setState","style","flex","Component","ClipInfo","download","clipInfo","link","document","href","audioUrl","sessionName","trackName","body","appendChild","click","removeChild","_this$props","showAudio","onDelete","display","flexDirection","margin","alignItems","trackNumber","maxWidth","minWidth","visualizer_Visualizer","controls","marginTop","src","justifyContent","onClick","TitleBar","title","screen","marginBottom","fontSize","status","marginLeft","ScreenWrapper","position","top","bottom","left","right","children","RecordButton","_PureComponent","size","borderRadius","backgroundColor","border","cursor","PureComponent","StopButton","ButtonBar","direction","textAlign","padding","PaddedBar","Recorder","mediaRecorder","maxSilence","minSaveLength","lastClip","saveMode","lastNoiseCounter","chunks","trackCount","stream","saveClip","clips","toConsumableArray","state","record","start","pause","resume","split","stop","console","log","audio","then","audioContext","AudioContext","audioSource","createMediaStreamSource","analyser","createAnalyser","connect","bufferLength","fftSize","dataArray","Uint8Array","canvas","querySelector","draw","requestAnimationFrame","getByteTimeDomainData","min","max","forEach","v","Math","slice","MediaRecorder","mimeType","audioBitsPerSecond","onstart","e","ondataavailable","push","data","onstop","blob","Blob","type","window","URL","createObjectURL","catch","err","error","_this$state","screenWrapper_ScreenWrapper","titleBar_TitleBar","overflow","map","clip","clipInfo_ClipInfo","splice","paddedBar_PaddedBar","className","buttonBar_ButtonBar","recordButton_RecordButton","stopButton_StopButton","StartScreen","onChange","onSessionNameChange","target","onStart","ListenScreen","App","currentScreen","recorder_Recorder","listenScreen_ListenScreen","startScreen_StartScreen","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.32414af7.chunk.js","sourcesContent":["export var promisifiedOldGUM = function (constraints, successCallback, errorCallback) {\r\n    // First get ahold of getUserMedia, if present\r\n    var getUserMedia = (navigator.getUserMedia ||\r\n        navigator.webkitGetUserMedia ||\r\n        navigator.mozGetUserMedia ||\r\n        navigator.msGetUserMedia);\r\n\r\n    // Some browsers just don't implement it - return a rejected promise with an error\r\n    // to keep a consistent interface\r\n    if (!getUserMedia) {\r\n        return Promise.reject(new Error('getUserMedia is not implemented in this browser'));\r\n    }\r\n\r\n    // Otherwise, wrap the call to the old navigator.getUserMedia with a Promise\r\n    return new Promise(function (successCallback, errorCallback) {\r\n        getUserMedia.call(navigator, constraints, successCallback, errorCallback);\r\n    });\r\n\r\n}\r\n\r\nexport var polyfillGUM = function () {\r\n    // Older browsers might not implement mediaDevices at all, so we set an empty object first\r\n    if (navigator.mediaDevices === undefined) {\r\n        navigator.mediaDevices = {};\r\n    }\r\n\r\n    // Some browsers partially implement mediaDevices. We can't just assign an object\r\n    // with getUserMedia as it would overwrite existing properties.\r\n    // Here, we will just add the getUserMedia property if it's missing.\r\n    if (navigator.mediaDevices.getUserMedia === undefined) {\r\n        navigator.mediaDevices.getUserMedia = promisifiedOldGUM;\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport interface IVisualizerProps {\r\n    waveform: number[];\r\n}\r\n\r\nexport interface IVisualizerState {\r\n    clipCanvas?: HTMLCanvasElement;\r\n}\r\n\r\nexport class Visualizer extends Component<IVisualizerProps, IVisualizerState> {\r\n    clipCanvas: HTMLCanvasElement | null = null;\r\n\r\n    componentDidUpdate() {\r\n        if (!this.clipCanvas) { return; }\r\n        var canvasCtx = this.clipCanvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n\r\n        var WIDTH = this.clipCanvas.width\r\n        var HEIGHT = this.clipCanvas.height;\r\n\r\n        canvasCtx.fillStyle = 'rgb(25, 25, 25)';\r\n        canvasCtx.fillRect(0, 0, WIDTH, HEIGHT);\r\n\r\n        canvasCtx.lineWidth = 2;\r\n        canvasCtx.strokeStyle = 'rgb(125, 125, 125)';\r\n\r\n\r\n        var sliceWidth = WIDTH * 1.0 / this.props.waveform.length;\r\n        var x = 0;\r\n\r\n        var lastX = 0;\r\n        var lastY = HEIGHT / 2;\r\n        canvasCtx.beginPath();\r\n        canvasCtx.moveTo(lastX, lastY);\r\n\r\n        for (var i = 0; i < this.props.waveform.length; i++) {\r\n            var v = this.props.waveform[i] / 128.0;\r\n            var y = v * HEIGHT / 2;\r\n\r\n            if (this.props.waveform[i] > 140 || this.props.waveform[i] < 100) {\r\n                //canvasCtx.strokeStyle = 'rgb(255, 0, 0)';\r\n            }\r\n            else {\r\n                //canvasCtx.strokeStyle = 'rgb(0, 0, 0)';\r\n            }\r\n\r\n            canvasCtx.lineTo(x, y);\r\n\r\n            lastX = x;\r\n            lastY = y;\r\n\r\n            x += sliceWidth;\r\n        }\r\n\r\n        canvasCtx.stroke();\r\n    }\r\n\r\n    render() {\r\n        return <canvas height=\"100\" width=\"1000\" ref={c => { if(!this.clipCanvas && c){\r\n            this.clipCanvas = c;\r\n            this.setState({clipCanvas: c});\r\n        } }} style={{ flex: \"auto\" }} />;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Visualizer } from './visualizer';\r\n\r\nexport interface IClipInfo {\r\n    sessionName: string;\r\n    audioUrl: string;\r\n    trackName: string;\r\n\r\n    //todo: add other information like length, date and wave preview\r\n    waveform: number[];\r\n    trackNumber: number;\r\n}\r\n\r\nexport interface IClipInfoProps {\r\n    clipInfo: IClipInfo;\r\n    onDelete: () => void;\r\n    showAudio?: boolean;\r\n}\r\n\r\nexport class ClipInfo extends Component<IClipInfoProps> {\r\n    clipCanvas: HTMLCanvasElement | null = null;\r\n\r\n    private download = () => {\r\n        const { clipInfo } = this.props;        \r\n        var link = document.createElement(\"a\"); // Or maybe get it from the current document\r\n        link.href = clipInfo.audioUrl;\r\n        link.download = (clipInfo.sessionName ? clipInfo.sessionName + \"_\" : \"\") + clipInfo.trackName + \".webm\";\r\n        document.body.appendChild(link);\r\n        this.download && link.click();\r\n        document.body.removeChild(link);\r\n    }\r\n\r\n    render() {\r\n        const { clipInfo, showAudio, onDelete } = this.props;\r\n        return (\r\n            <div style={{ display: \"flex\", flexDirection: \"row\", height: \"100px\", margin: \"5px\" }}>\r\n                <div style={{ flex: \"none\", display: \"flex\", alignItems: \"center\", margin: \"5px\" }}>{clipInfo.trackNumber}</div>\r\n                <div style={{ flex: \"auto\", display: \"flex\", flexDirection: \"column\", maxWidth:\"80%\", minWidth: \"50%\" }}>\r\n                    <Visualizer waveform={clipInfo.waveform} />\r\n                    {showAudio && <audio controls style={{width: \"100%\", height: \"40px\", marginTop:\"10px\"}} src={clipInfo.audioUrl} />}\r\n                </div>\r\n                <div style={{ margin:\"5px\", justifyContent:\"space-around\", flex: \"none\", display: \"flex\", flexDirection: \"column\" }}>\r\n                    <div style={{ flex: \"none\" }}>\r\n                        {clipInfo.trackName}\r\n                    </div>\r\n                    <div style={{ flex: \"none\" }}>\r\n                        <button onClick={onDelete}>Delete</button>\r\n                    </div>\r\n                    <div style={{ flex: \"none\" }}>\r\n                        <button onClick={this.download}>Download</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Screen } from './../../App';\r\n\r\nexport class TitleBar extends Component<{ title?: string, screen: Screen }> {\r\n    render() {\r\n        const { title, screen } = this.props;\r\n        return (\r\n            <div\r\n                style={{\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                    marginBottom: \"auto\",\r\n                    display: \"flex\",\r\n                    fontSize: \"125%\"\r\n                }}>\r\n                {(status == \"recording\" || status == \"armed\") && \"Recording\"}\r\n                {title}\r\n                {screen == \"record\" && <button style={{ marginLeft: \"auto\" }}>Listen</button>}\r\n                {screen == \"listen\" && <button style={{ marginLeft: \"auto\" }}>Record</button>}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport class ScreenWrapper extends Component {\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    position: \"absolute\",\r\n                    top: \"5%\",\r\n                    bottom: \"5%\",\r\n                    left: \"5%\",\r\n                    right: \"5%\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    justifyContent: \"flex-end\",\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component, PureComponent } from 'react';\r\n\r\nexport interface IRecordButtonProps {\r\n    onClick: () => void;\r\n    title: string;\r\n    size?: string;\r\n}\r\n\r\nexport class RecordButton extends PureComponent<IRecordButtonProps> {\r\n    render() {\r\n        const size = this.props.size || \"75px\";\r\n        return <button\r\n            onClick={this.props.onClick}\r\n            title={this.props.title}\r\n            style={{\r\n                height: size,\r\n                width: size,\r\n                borderRadius: size,\r\n                backgroundColor: \"rgb(225,0,0)\",\r\n                border: \"none\",\r\n                cursor: \"pointer\"\r\n            }}\r\n        />\r\n    }\r\n}","import React, { Component, PureComponent } from 'react';\r\n\r\nexport interface IStopButtonProps {\r\n    onClick: () => void;\r\n    title: string;\r\n    size?: string;\r\n}\r\n\r\nexport class StopButton extends PureComponent<IStopButtonProps> {\r\n    render() {\r\n        const size = this.props.size || \"75px\";\r\n        return <button\r\n            onClick={this.props.onClick}\r\n            title={this.props.title}\r\n            style={{\r\n                height: size,\r\n                width: size,\r\n                backgroundColor: \"rgb(125,125,125)\",\r\n                border: \"none\",\r\n                cursor: \"pointer\"\r\n            }}\r\n        />\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport class ButtonBar extends Component<{ direction?: \"row\" | \"column\" }> {\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{\r\n                    flex: \"none\",\r\n                    display: \"flex\",\r\n                    flexDirection: (this.props.direction || \"row\"),\r\n                    textAlign: \"center\",\r\n                    justifyContent: \"space-around\",\r\n                    alignItems: \"center\",\r\n                    padding: \"5px\"\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport class PaddedBar extends Component {\r\n    render() {\r\n        return (\r\n            <div\r\n                style={{ \r\n                    padding: \"10% 15px\",\r\n                    display: \"flex\" \r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}","import { polyfillGUM } from \"./getusermedia\";\r\nimport React, { Component } from 'react';\r\nimport { ClipInfo, IClipInfo } from \"./clipInfo\";\r\nimport { TitleBar } from \"./components/layout/titleBar\";\r\nimport { ScreenWrapper } from \"./components/layout/screenWrapper\";\r\nimport { RecordButton } from \"./components/buttons/recordButton\";\r\nimport { StopButton } from \"./components/buttons/stopButton\";\r\nimport { ButtonBar } from \"./components/layout/buttonBar\";\r\nimport { PaddedBar } from \"./components/layout/paddedBar\";\r\n\r\nexport interface IRecorderProps {\r\n    sessionName?: string;\r\n}\r\n\r\nexport interface IRecorderState {\r\n    lastClip?: IClipInfo;\r\n    clips: IClipInfo[];\r\n    status: \"initializing\" | \"ready\" | \"armed\" | \"recording\" | \"done\" | \"paused\"; // it looks like mediarecorder is reusable after stopping.\r\n    recording?: \"waiting for audio\" | \"detected sound recently\" | \"recording a track\";\r\n}\r\n\r\nexport class Recorder extends Component<IRecorderProps, IRecorderState> {\r\n    private mediaRecorder?: MediaRecorder;\r\n\r\n    private readonly maxSilence = 100;\r\n    private readonly minSaveLength = 1000;\r\n    private lastClip?: IClipInfo;\r\n    private saveMode: \"saveNext\" | \"autodecide\" | \"skipNext\" = \"autodecide\";\r\n    private lastNoiseCounter = 0;\r\n\r\n    // currently recording chunks\r\n    private chunks: Blob[] = [];\r\n\r\n    // currently recording chunks\r\n    private waveform: number[] = [];\r\n\r\n    private trackCount = 1;\r\n\r\n    stream?: MediaStream;\r\n\r\n    constructor(props: IRecorderProps) {\r\n        super(props);\r\n        polyfillGUM();\r\n        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n            console.log('getUserMedia supported.');\r\n            navigator.mediaDevices.getUserMedia({ audio: true })\r\n                .then(stream => {\r\n                    this.stream = stream;\r\n                    var audioContext = new AudioContext();\r\n                    var audioSource = audioContext.createMediaStreamSource(stream);\r\n                    var analyser = audioContext.createAnalyser();\r\n                    audioSource.connect(analyser);\r\n                    var bufferLength = analyser.fftSize;\r\n                    console.log(bufferLength);\r\n                    var dataArray = new Uint8Array(bufferLength);\r\n\r\n                    var canvas = document.querySelector('.visualizer') as HTMLCanvasElement;\r\n                    var canvasCtx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n\r\n                    // TODO: move this to a method\r\n                    var draw = () => {\r\n                        var WIDTH = canvas.width\r\n                        var HEIGHT = canvas.height;\r\n\r\n                        requestAnimationFrame(draw);\r\n\r\n                        analyser.getByteTimeDomainData(dataArray);\r\n\r\n\r\n                        var min = 100000000000000;\r\n                        var max = -100000000000000;\r\n                        dataArray.forEach(v => { min = Math.min(v, min); max = Math.max(v, max); });\r\n\r\n                        this.waveform = this.waveform.concat([min, max]);\r\n\r\n\r\n                        if (this.state.status != \"recording\") {\r\n                            // there are some... race conditions here depending on when the recording gets stopped.\r\n                            // should either fix this or ensure we don't trim VALID recordings\r\n                            // it should never be able to get out of this region, but bad things would happen if it did?\r\n                            if (this.waveform.length > this.maxSilence && this.waveform.length < this.minSaveLength) {\r\n                                this.waveform = this.waveform.slice(this.waveform.length - this.maxSilence);\r\n                            }\r\n                        }\r\n\r\n                        if (max > 140 || min < 100) {\r\n                            this.lastNoiseCounter = 0;\r\n                            // if we aren't recording we should start!\r\n                            if (this.state.status == \"armed\") {\r\n                                this.record();\r\n                            }\r\n                        }\r\n                        else {\r\n                            this.lastNoiseCounter++;\r\n                            if (this.lastNoiseCounter > this.maxSilence) {\r\n                                // if we are recording we should stop by stay armed.\r\n                                if (this.state.status == \"recording\") {\r\n                                    this.split();\r\n                                }\r\n                            }\r\n                        }\r\n\r\n\r\n                        canvasCtx.fillStyle = 'rgb(25, 25, 25)';\r\n                        canvasCtx.fillRect(0, 0, WIDTH, HEIGHT);\r\n\r\n                        canvasCtx.lineWidth = 2;\r\n\r\n                        if (this.state.status == \"recording\") {\r\n                            canvasCtx.strokeStyle = 'rgb(225, 0, 0)';\r\n                        }\r\n                        else {\r\n                            canvasCtx.strokeStyle = 'rgb(75, 75, 75)';\r\n                        }\r\n\r\n                        var sliceWidth = WIDTH * 1.0 / this.waveform.length;\r\n                        var x = 0;\r\n\r\n                        var lastX = 0;\r\n                        var lastY = HEIGHT / 2;\r\n                        canvasCtx.beginPath();\r\n                        canvasCtx.moveTo(lastX, lastY);\r\n\r\n                        for (var i = 0; i < this.waveform.length; i++) {\r\n                            var v = this.waveform[i] / 128.0;\r\n                            var y = v * HEIGHT / 2;\r\n\r\n                            if (this.waveform[i] > 140 || this.waveform[i] < 100) {\r\n                                //canvasCtx.strokeStyle = 'rgb(255, 0, 0)';\r\n\r\n                            }\r\n                            else {\r\n                                //canvasCtx.strokeStyle = 'rgb(255, 255, 255)';\r\n                            }\r\n\r\n                            //canvasCtx.beginPath();\r\n                            //canvasCtx.moveTo(lastX, lastY);\r\n                            canvasCtx.lineTo(x, y);\r\n                            //canvasCtx.stroke();\r\n\r\n                            lastX = x;\r\n                            lastY = y;\r\n\r\n                            x += sliceWidth;\r\n                        }\r\n\r\n                        canvasCtx.lineTo(canvas.width, canvas.height / 2);\r\n                        canvasCtx.stroke();\r\n\r\n                    }\r\n\r\n                    draw();\r\n\r\n                    this.mediaRecorder = new MediaRecorder(stream, { mimeType: \"audio/webm\", audioBitsPerSecond: 320000 });\r\n                    this.mediaRecorder.onstart = e => {\r\n                        // reset our waveform and chunks\r\n                        this.chunks = [];\r\n                        this.waveform = [];\r\n                    }\r\n                    this.mediaRecorder.ondataavailable = (e) => {\r\n                        this.chunks.push(e.data);\r\n                    }\r\n                    this.mediaRecorder.onstop = (e) => {\r\n                        const blob = new Blob(this.chunks, { 'type': 'audio/webm' });\r\n                        this.chunks = [];\r\n                        const audioUrl = window.URL.createObjectURL(blob);\r\n                        const clipInfo: IClipInfo = {\r\n                            audioUrl,\r\n                            waveform: this.waveform,\r\n                        } as IClipInfo;\r\n\r\n                        // TODO: we should have a way to MANUALLY SAVE and MANUALLY SKIP\r\n                        // eg stop/save or trash can button\r\n\r\n                        // this is where we should decide if we keep it or not...\r\n                        // if it is really short DONT keep it.\r\n\r\n                        this.lastClip = clipInfo;\r\n                        this.setState({ lastClip: clipInfo });\r\n                        if (this.saveMode == \"autodecide\") {\r\n                            console.log(\"waveform length: \" + clipInfo.waveform.length)\r\n                            if (clipInfo.waveform.length < this.minSaveLength) {\r\n                                console.log(\"skip saving the track since it is so short\");\r\n                                return;\r\n                            }\r\n\r\n                            // also skip if it has very little CONTENT as a percentage. especially for very short lcips.\r\n                        }\r\n                        if (this.saveMode == \"skipNext\") {\r\n                            // only skip one\r\n                            this.saveMode = \"autodecide\";\r\n                            console.log(\"skip saving because we are in skipNext save mode\");\r\n                            return;\r\n                        }\r\n                        if (this.saveMode == \"saveNext\") {\r\n                            // only save one\r\n                            this.saveMode = \"autodecide\";\r\n                            console.log(\"force saving because we are in saveNext save mode\");\r\n                        }\r\n\r\n                        this.saveClip(clipInfo);\r\n                    }\r\n\r\n                    // actually lets go straight to armed. default is to go to \"ready\"\r\n                    this.setState({ status: \"armed\" });\r\n\r\n                }).catch(function (err) {\r\n                    console.error('The following getUserMedia error occured: ' + err);\r\n                }\r\n                );\r\n        }\r\n        else {\r\n            console.error('getUserMedia not supported on your browser!');\r\n        }\r\n\r\n        this.state = { status: \"initializing\", clips: [] };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.stream) { this.stream.stop(); }\r\n    }\r\n\r\n    private saveClip = (clipInfo: IClipInfo) => {\r\n        clipInfo.trackName = \"Track \" + this.trackCount;\r\n        clipInfo.trackNumber = this.trackCount;\r\n        this.trackCount++;\r\n        this.setState({ clips: [...this.state.clips, clipInfo], lastClip: undefined });\r\n        this.lastClip = undefined;\r\n        this.waveform = [];\r\n    }\r\n\r\n    public record = () => {\r\n        if (!this.mediaRecorder) {\r\n            throw \"No recorder!\";\r\n        }\r\n\r\n        this.mediaRecorder.start();\r\n        this.setState({ status: \"recording\" });\r\n    }\r\n\r\n    public pause = () => {\r\n        if (!this.mediaRecorder) {\r\n            throw \"No recorder!\";\r\n        }\r\n\r\n        this.mediaRecorder.pause();\r\n        this.setState({ status: \"paused\" });\r\n    }\r\n\r\n    public resume = () => {\r\n        if (!this.mediaRecorder) {\r\n            throw \"No recorder!\";\r\n        }\r\n\r\n        this.mediaRecorder.resume();\r\n        this.setState({ status: \"recording\" });\r\n    }\r\n\r\n    public split = () => {\r\n        if (!this.mediaRecorder) {\r\n            throw \"No recorder!\";\r\n        }\r\n\r\n        this.mediaRecorder.stop();\r\n        this.setState({ status: \"armed\" }); // not sure this is right!\r\n    }\r\n\r\n    public stop = () => {\r\n        if (!this.mediaRecorder) {\r\n            throw \"No recorder!\";\r\n        }\r\n\r\n        if (this.mediaRecorder.state == \"recording\" || this.mediaRecorder.state == \"paused\") {\r\n            this.mediaRecorder.stop();\r\n        }\r\n\r\n        this.setState({ status: \"ready\" });\r\n    }\r\n\r\n    render() {\r\n        const { status, clips, lastClip } = this.state;\r\n        return (\r\n            <ScreenWrapper>\r\n                <TitleBar title={\"Recording \" + (this.props.sessionName || \"\")} screen=\"record\" />\r\n                <div style={{ overflow: \"auto\", flex: \"auto\", margin: \"25px 10px\" }}>\r\n                    {clips.map((clip, i) => {\r\n                        return <ClipInfo key={i} clipInfo={clip} onDelete={() => {\r\n                            var removed = clips.splice(i, 1);\r\n                            this.setState({ clips: clips.slice() })\r\n                        }} />\r\n                    })}\r\n                </div>\r\n                <PaddedBar>\r\n                    <canvas className=\"visualizer\" height=\"100\" width=\"1000\" style={{ width: \"100%\" }} />\r\n                </PaddedBar>\r\n                <ButtonBar>\r\n                    {(status != \"recording\" && lastClip) && <button onClick={() => { this.saveClip(lastClip); }}>Save</button>}\r\n                    {(status == \"recording\") && <button onClick={() => { this.saveMode = \"saveNext\"; this.split() }}>Save</button>}\r\n\r\n                    {status == \"ready\" &&\r\n                        <RecordButton\r\n                            onClick={() => { this.setState({ status: \"armed\" }) }}\r\n                            title=\"Arm for recording\"\r\n                        />\r\n                    }\r\n                    \r\n                    {(status == \"recording\" || status == \"armed\") &&\r\n                        <StopButton\r\n                            onClick={this.stop}\r\n                            title=\"Stop\"\r\n                        />\r\n                    }\r\n\r\n                    {(status != \"recording\" && lastClip) && <button onClick={() => { this.setState({lastClip: undefined}) }}>Skip</button>}\r\n                    {(status == \"recording\") && <button onClick={() => { this.saveMode = \"skipNext\"; this.split() }}>Skip</button>}\r\n                </ButtonBar>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { RecordButton } from '../buttons/recordButton';\r\nimport { ButtonBar } from '../layout/buttonBar';\r\nimport { ScreenWrapper } from '../layout/screenWrapper';\r\nimport { TitleBar } from '../layout/titleBar';\r\nimport { PaddedBar } from '../layout/paddedBar';\r\n\r\nexport interface IStartScreenProps {\r\n    onStart: () => void;\r\n    onSessionNameChange: (name: string) => void;\r\n}\r\n\r\nexport class StartScreen extends Component<IStartScreenProps> {\r\n    render() {\r\n        return (\r\n            <ScreenWrapper>\r\n                <TitleBar title=\"Session Recorder\" screen=\"start\" />\r\n                <PaddedBar>\r\n                    <input\r\n                        onChange={e => {\r\n                            this.props.onSessionNameChange(e.target.value);\r\n                        }}\r\n                        type=\"textfield\"\r\n                        style={{\r\n                            height: \"50px\",\r\n                            flex: \"auto\",\r\n                            fontSize: \"200%\",\r\n                            padding: \"5px\",\r\n                            textAlign: \"center\"\r\n                        }}\r\n                    />\r\n                </PaddedBar>\r\n                <ButtonBar>\r\n                    <RecordButton\r\n                        onClick={this.props.onStart}\r\n                        title=\"Start a new session\"\r\n                    />\r\n                </ButtonBar>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport class ListenScreen extends Component {\r\n    render(){\r\n        return <div style={{display: \"flex\", flexDirection: \"column\"}}>\r\n            <div>Listening blah</div>\r\n            <div><button>Listen up!</button></div>\r\n        </div>;\r\n    }\r\n}","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Recorder } from './recorder';\nimport { StartScreen } from './components/screens/startScreen';\nimport { ListenScreen } from './components/screens/listenScreen';\n\n// App has 3 states. Start, Record and Listen\nexport type Screen = \"start\" | \"record\" | \"listen\";\n\ninterface IAppProps {\n}\n\ninterface IAppState {\n  currentScreen: Screen;\n  sessionName?: string;\n}\n\nclass App extends Component<IAppProps, IAppState> {\n  constructor(props: IAppProps) {\n    super(props);\n    this.state = { currentScreen: \"start\" };\n  }\n\n  render() {\n    const { currentScreen } = this.state;\n    switch (currentScreen) {\n      case \"record\":\n        // current functionality is in <Recorder>\n        return <Recorder sessionName={this.state.sessionName} />;\n      case \"listen\":\n        return <ListenScreen />\n      case \"start\":\n      default:\n        return <StartScreen\n          onSessionNameChange={sessionName => { this.setState({ sessionName }) }}\n          onStart={() => { this.setState({ currentScreen: \"record\" }) }}\n        />\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}